---
import Search from "astro-pagefind/components/Search";
---

<aside data-pagefind-ignore>
  <div
    transition:persist
    id="backdrop"
    class="bg-[rgba(0, 0, 0, 0.5] invisible fixed left-0 top-0 z-50 flex h-screen w-full justify-center p-6 backdrop-blur-sm"
  >
    <div
      id="pagefind-container"
      class="m-0 flex h-fit max-h-[80%] w-full max-w-screen-sm flex-col overflow-auto border border-black/15 bg-neutral-100 p-2 px-4 py-3 shadow dark:border-white/20 dark:bg-neutral-900"
    >
      <Search
        id="search"
        className="pagefind-ui"
        uiOptions={{
          showImages: false,
          excerptLength: 15,
          resetStyles: false,
        }}
      />
      <div class="mr-2 pb-1 pt-4 text-right text-xs dark:prose-invert">
        Press <span class="prose text-xs dark:prose-invert"
          ><kbd class="">Esc</kbd></span
        > or click anywhere to close
      </div>
    </div>
  </div>
</aside>

<script>
  function setupSearch() {
    const magnifyingGlass = document.getElementById("magnifying-glass");
    const backdrop = document.getElementById("backdrop");

    if (!magnifyingGlass || !backdrop) return;

    function openPagefind() {
      const searchDiv = document.getElementById("search");
      const search = searchDiv?.querySelector("input");
      if (search) {
        setTimeout(() => {
          search.focus();
        }, 0);
      }
      backdrop?.classList.remove("invisible");
      backdrop?.classList.add("visible");
    }

    function closePagefind() {
      const search = document.getElementById("search")?.querySelector("input");
      if (search) {
        search.value = "";
        // trigger an input event to clear the search results
        search.dispatchEvent(new Event("input", { bubbles: true }));
      }
      backdrop?.classList.remove("visible");
      backdrop?.classList.add("invisible");
    }

    // remove any existing event listeners
    const newMagnifyingGlass = magnifyingGlass.cloneNode(true) as HTMLElement;
    if (magnifyingGlass.parentNode) {
      magnifyingGlass.parentNode.replaceChild(
        newMagnifyingGlass,
        magnifyingGlass,
      );
    }
    newMagnifyingGlass.addEventListener("click", openPagefind);

    // handle keyboard shortcuts
    function handleKeydown(e: KeyboardEvent) {
      if (e.key === "/" || ((e.metaKey || e.ctrlKey) && e.key === "k")) {
        e.preventDefault();
        openPagefind();
      } else if (e.key === "Escape") {
        closePagefind();
      }
    }

    // handle search result clicks
    function handleResultClick(event: MouseEvent) {
      const target = event.target as HTMLElement;
      if (target.classList.contains("pagefind-ui__result-link")) {
        closePagefind();
        // small delay to ensure the search is cleared
        setTimeout(() => {
          const search = document
            .getElementById("search")
            ?.querySelector("input");
          if (search) {
            search.value = "";
            search.dispatchEvent(new Event("input", { bubbles: true }));
          }
        }, 0);
      }
    }

    // handle backdrop clicks
    function handleBackdropClick(event: MouseEvent) {
      const target = event.target as HTMLElement;
      if (!target.closest("#pagefind-container")) {
        closePagefind();
      }
    }

    // handle form submission
    function handleFormSubmit(event: Event) {
      event.preventDefault();
    }

    // remove existing event listeners
    document.removeEventListener("keydown", handleKeydown);
    document.removeEventListener("click", handleResultClick);
    backdrop.removeEventListener("click", handleBackdropClick);

    // add new event listeners
    document.addEventListener("keydown", handleKeydown);
    document.addEventListener("click", handleResultClick);
    backdrop.addEventListener("click", handleBackdropClick);

    const form = document.getElementById("form");
    if (form) {
      form.removeEventListener("submit", handleFormSubmit);
      form.addEventListener("submit", handleFormSubmit);
    }

    // clear search when navigating away
    document.addEventListener("astro:before-preparation", closePagefind);
  }

  setupSearch();
  document.addEventListener("astro:page-load", setupSearch);
</script>

<style is:global>
  :root {
    --pagefind-ui-scale: 0.75;
    --pagefind-ui-border-width: 1px;
    --pagefind-ui-border-radius: 0px;
    --pagefind-ui-font: "Geist Mono", monospace;
    --pagefind-ui-primary: #3d3d3d;
    --pagefind-ui-text: #3d3d3d;
    --pagefind-ui-background: #ffffff;
    --pagefind-ui-border: #d0d0d0;
    --pagefind-ui-tag: #f5f5f5;
  }

  .dark {
    --pagefind-ui-primary: #d4d4d4;
    --pagefind-ui-text: #d4d4d4;
    --pagefind-ui-background: #171717;
    --pagefind-ui-border: #404040;
  }

  #search input {
    font-weight: normal;
  }

  #search p {
    font-weight: normal;
  }

  #search .pagefind-ui__result-title {
    font-weight: 600;
  }

  #search .pagefind-ui__message {
    padding: 0;
    padding-bottom: 0.75rem;
  }
</style>
